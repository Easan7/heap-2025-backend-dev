//* delete-node_modules.js
const fs = require("fs");
const path = require("path");

let deletedCount = 0; // Counter for deleted node_modules

function deleteWithRetry(fullPath, retries = 3) {
    try {
        fs.rmSync(fullPath, { recursive: true, force: true });
    } catch (err) {
        if (retries > 0 && (err.code === "ENOTEMPTY" || err.code === "EBUSY")) {
            setTimeout(() => deleteWithRetry(fullPath, retries - 1), 100);
        } else {
            console.error(`Failed to delete ${fullPath}: ${err.message}`);
        }
    }
}

function deleteNodeModules(dir, rootDir) {
    fs.readdirSync(dir, { withFileTypes: true }).forEach((entry) => {
        const fullPath = path.join(dir, entry.name);
        if (entry.isDirectory()) {
            if (entry.name === "node_modules") {
                // Delete the node_modules folder and all its contents
                deleteWithRetry(fullPath);
                // Print path relative to rootDir
                const relPath = path.relative(rootDir, fullPath);
                deletedCount++;
                console.log(`Deleted [${deletedCount}]: ${relPath}`);
            } else {
                // Recurse into subdirectories
                deleteNodeModules(fullPath, rootDir);
            }
        }
    });
}

//! Start from the current working directory
const rootDir = process.cwd();
deleteNodeModules(rootDir, rootDir);

if (deletedCount > 0) {
    console.log(
        `\nAll node_modules folders deleted. Total deleted: ${deletedCount}\n`
    );
} else {
    console.log("\nNo node_modules folders found in the current project.\n");
}

//! Note: This script will delete all node_modules folders in the current directory and its subdirectories.
//? To run this script, run: node delete-node_modules.js
